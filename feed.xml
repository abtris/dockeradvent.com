<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker Advent</title>
    <description>Made by &lt;a href=&quot;https://twitter.com/abtris&quot; target=&quot;_blank&quot;&gt;@abtris&lt;/a&gt;.</description>
    <link>http://www.dockeradvent.com//</link>
    <atom:link href="http://www.dockeradvent.com//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 24 Dec 2015 07:55:26 +0100</pubDate>
    <lastBuildDate>Thu, 24 Dec 2015 07:55:26 +0100</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Day Twenty Four - Docker Advent Summary 2015</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
this is last post for year 2015.&lt;/p&gt;

&lt;p&gt;Here is summary all posts in 2015:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-01-day-one-what-is-docker&quot;&gt;Day One - What&amp;#39;s docker?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-02-day-two-open-container-ecosystem&quot;&gt;Day Two - Open Container Ekosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-03-day-three-docker-install-upgrade&quot;&gt;Day Three - Docker install and upgrade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-04-day-four-docker-machine&quot;&gt;Day Four - Docker Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-05-day-five-docker-compose-part-1&quot;&gt;Day Five - Docker Compose Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-06-day-six-dockerhub&quot;&gt;Day Six - Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-07-day-seven-dockerfile&quot;&gt;Day Seven - Dockerfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-08-day-eight-docker-compose-part-2&quot;&gt;Day Eight - Docker Compose Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-09-day-nine-docker-registry&quot;&gt;Day Nine - Docker Registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-10-day-ten-docker-swarm&quot;&gt;Day Ten - Docker Swarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-11-day-eleven-docker-version-manager&quot;&gt;Day Eleven - Docker Version Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-12-day-twelve-docker-and-circleci&quot;&gt;Day Twelve - CircleCI and Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-13-day-thirteen-docker-and-travisci&quot;&gt;Day Thirteen - Docker and TravisCI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-14-day-fourteen-docker-lifecycle&quot;&gt;Day Fourteen - Docker Lifecycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-15-day-fifteen-container-lifecycle&quot;&gt;Day Fifteen - Container Lifecycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-16-day-sixteen-using-docker-for-cli-tools&quot;&gt;Day Sixteen - Using docker for CLI Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-17-day-seventeen-docker-and-sphinx-documentation&quot;&gt;Day Seventeen - Docker and Sphinx documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-18-day-eighteen-docker-and-heroku&quot;&gt;Day Eighteen - Docker and Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-19-day-nineteen-docker-and-aws-ecs&quot;&gt;Day Nineteen - Docker and AWS ECS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-20-day-twenty-docker-and-tutum&quot;&gt;Day Twenty - Docker and Tutum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-21-day-twenty-one-docker-and-logging&quot;&gt;Day Twenty One - Docker and logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-22-day-twenty-two-docker-and-monitoring&quot;&gt;Day Twenty Two - Docker and monitoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015-12-23-day-twenty-three-docker-tips-and-tricks&quot;&gt;Day Twenty Three - Docker tips and tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dockeradvent.com/2015/12/24/day-twenty-four-docker-advent-summary/&quot;&gt;Day Twenty Four - Docker Advent Summary 2015&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope, these posts can be useful. The posts order is chaotic. I think next year I have more time and some co-authors to make this better.&lt;/p&gt;

&lt;p&gt;In 2016 have to docker show us how deploy docker container fast and scalable. Problems I see in containers size and I hope many containers change base from Ubuntu to Alpine.&lt;/p&gt;

&lt;p&gt;See you in 2016,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/24/day-twenty-four-docker-advent-summary/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/24/day-twenty-four-docker-advent-summary/</guid>
        
        
      </item>
    
      <item>
        <title>Day Twenty Three - Docker tips and tricks</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
this is last but one post before Christmas.&lt;/p&gt;

&lt;h3&gt;1. Get IP address of your container&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;docker inspect -f &amp;#39;&amp;#39; $ID
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ docker inspect -f &amp;#39;&amp;#39; 9dd74d9998bb

{&amp;quot;Bridge&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;SandboxID&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;HairpinMode&amp;quot;:false,&amp;quot;LinkLocalIPv6Address&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;LinkLocalIPv6PrefixLen&amp;quot;:0,&amp;quot;Ports&amp;quot;:null,&amp;quot;SandboxKey&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;SecondaryIPAddresses&amp;quot;:null,&amp;quot;SecondaryIPv6Addresses&amp;quot;:null,&amp;quot;EndpointID&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;Gateway&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;GlobalIPv6Address&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;GlobalIPv6PrefixLen&amp;quot;:0,&amp;quot;IPAddress&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;IPPrefixLen&amp;quot;:0,&amp;quot;IPv6Gateway&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;MacAddress&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;Networks&amp;quot;:{&amp;quot;bridge&amp;quot;:{&amp;quot;EndpointID&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;Gateway&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;IPAddress&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;IPPrefixLen&amp;quot;:0,&amp;quot;IPv6Gateway&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;GlobalIPv6Address&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;GlobalIPv6PrefixLen&amp;quot;:0,&amp;quot;MacAddress&amp;quot;:&amp;quot;&amp;quot;}}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if you can have nice output you can use python or &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ docker inspect -f &amp;#39;&amp;#39; $ID | python -mjson.tool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ docker inspect -f &amp;#39;&amp;#39; $ID | jq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;jq have nice colored output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Bridge&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;SandboxID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;HairpinMode&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;LinkLocalIPv6Address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;LinkLocalIPv6PrefixLen&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Ports&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;SandboxKey&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;SecondaryIPAddresses&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;SecondaryIPv6Addresses&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;EndpointID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;GlobalIPv6Address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;GlobalIPv6PrefixLen&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;IPAddress&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;IPPrefixLen&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;IPv6Gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;MacAddress&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;Networks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;bridge&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;EndpointID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;Gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;IPAddress&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;IPPrefixLen&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;IPv6Gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;GlobalIPv6Address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;GlobalIPv6PrefixLen&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;MacAddress&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I like &lt;code&gt;jq&lt;/code&gt; it&amp;#39;s quite useful for manipulating, selection data from JSON. It&amp;#39;s good to know this tool.&lt;/p&gt;

&lt;p&gt;If you have one running container you can easy get ID from &lt;code&gt;docker ps&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ docker inspect -f &amp;#39;&amp;#39; $(docker ps -q)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2. Cleanup your docker machine&lt;/h3&gt;

&lt;p&gt;If you see message about running out of space. Cleanup machine.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Delete all containers
docker rm $(docker ps -a -q)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Delete all images
docker rmi $(docker images -q)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can remove only containers or both. Depends at your use case.&lt;/p&gt;

&lt;h3&gt;3. Docker cheet sheet&lt;/h3&gt;

&lt;p&gt;Print this or &lt;a href=&quot;https://github.com/wsargent/docker-cheat-sheet&quot;&gt;bookmark&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;4. Environment properties in container&lt;/h3&gt;

&lt;p&gt;This is useful if you have &lt;code&gt;--link&lt;/code&gt; parameter. Get &lt;code&gt;CONTAINER_ID&lt;/code&gt; of running container using &lt;code&gt;docker ps&lt;/code&gt; and use &lt;code&gt;docker exec&lt;/code&gt; to show all environment properties.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$  docker exec &amp;lt;CONTAINER_ID&amp;gt; env

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=dda0a7c94a09
TERM=xterm
REDIS_PORT=tcp://172.17.0.2:6379
REDIS_PORT_6379_TCP=tcp://172.17.0.2:6379
REDIS_PORT_6379_TCP_ADDR=172.17.0.2
REDIS_PORT_6379_TCP_PORT=6379
REDIS_PORT_6379_TCP_PROTO=tcp
REDIS_NAME=/jovial_ramanujan/redis
REDIS_ENV_REDIS_VERSION=3.0.5
REDIS_ENV_REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-3.0.5.tar.gz
REDIS_ENV_REDIS_DOWNLOAD_SHA1=ad3ee178c42bfcfd310c72bbddffbbe35db9b4a6
HOME=/root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you can show &lt;code&gt;env&lt;/code&gt; in image just run &lt;code&gt;docker run &amp;lt;IMAGE_NAME&amp;gt; env&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;5. Minimal docker image&lt;/h3&gt;

&lt;p&gt;You can use empty image called &lt;a href=&quot;https://hub.docker.com/_/scratch/&quot;&gt;scratch&lt;/a&gt; or small image as &lt;a href=&quot;https://hub.docker.com/_/alpine/&quot;&gt;alpine&lt;/a&gt;. &lt;a href=&quot;http://alpinelinux.org/&quot;&gt;Alpine Linux&lt;/a&gt; is very small secure linux distribution. Image have 5MB and package repository to possibility install necessary things.&lt;/p&gt;

&lt;p&gt;Use like you would any other base image:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; alpine:3.1
&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; apk add --update mysql-client &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/cache/apk/*
&lt;span class=&quot;k&quot;&gt;ENTRYPOINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mysql&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example has a virtual image size of only 16 MB. Compare that to our good friend Ubuntu:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; ubuntu:14.04
&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; apt-get update &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y mysql-client &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/lib/apt/lists/*
&lt;span class=&quot;k&quot;&gt;ENTRYPOINT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mysql&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This yields us a virtual image size of about 232 MB image.&lt;/p&gt;

&lt;p&gt;I think this is very useful.&lt;/p&gt;

&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/23/day-twenty-three-docker-tips-and-tricks/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/23/day-twenty-three-docker-tips-and-tricks/</guid>
        
        
      </item>
    
      <item>
        <title>Day Twenty Two - Docker and monitoring</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
Docker have &lt;a href=&quot;https://docs.docker.com/engine/articles/runmetrics/&quot;&gt;runtime metrics&lt;/a&gt;, you can see CPU, MEM, IO and network for every container.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ docker stats determined_shockley determined_wozniak prickly_hypatia
CONTAINER             CPU %               MEM USAGE/LIMIT       MEM %               NET I/O
determined_shockley   0.00%               884 KiB/1.961 GiB     0.04%               648 B/648 B
determined_wozniak    0.00%               1.723 MiB/1.961 GiB   0.09%               1.266 KiB/648 B
prickly_hypatia       0.00%               740 KiB/1.961 GiB     0.04%               1.898 KiB/648 B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;#39;s many tools for monitoring:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/cadvisor&quot;&gt;cAdvisor&lt;/a&gt; from google have web UI.&lt;/li&gt;
&lt;li&gt;I&amp;#39;m using &lt;a href=&quot;https://www.datadoghq.com/blog/monitor-docker-datadog/&quot;&gt;Datadog&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sensuapp.org/&quot;&gt;Sensu Monitoring Framework&lt;/a&gt; you can use with &lt;a href=&quot;https://registry.hub.docker.com/u/hiroakis/docker-sensu-server/&quot;&gt;container&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt; is an open-source service monitoring system and time series database.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://scoutapp.com/plugin_urls/19761-docker-monitor&quot;&gt;Scout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All monitoring works at some principles. Install agent on host and using docker stats and StatsD for sending data into some collection system.&lt;/p&gt;

&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/22/day-twenty-two-docker-and-monitoring/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/22/day-twenty-two-docker-and-monitoring/</guid>
        
        
      </item>
    
      <item>
        <title>Day Twenty One - Docker and logging</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
every container can have different &lt;a href=&quot;https://docs.docker.com/engine/reference/logging/overview/&quot;&gt;logging driver&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In version 1.9 is supported this drivers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;json-file (Default logging driver for Docker. Writes JSON messages to file.)&lt;/li&gt;
&lt;li&gt;syslog (Syslog logging driver for Docker. Writes log messages to syslog.)&lt;/li&gt;
&lt;li&gt;journald (Journald logging driver for Docker. Writes log messages to journald.)&lt;/li&gt;
&lt;li&gt;gelf (Graylog Extended Log Format (GELF) logging driver for Docker. Writes log  messages to a GELF endpoint likeGraylog or Logstash.)&lt;/li&gt;
&lt;li&gt;fluentd (Fluentd logging driver for Docker. Writes log messages to fluentd (forward input).)&lt;/li&gt;
&lt;li&gt;awslogs (Amazon CloudWatch Logs logging driver for Docker. Writes log messages to Amazon CloudWatch Logs.
)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All options you can find in &lt;a href=&quot;https://docs.docker.com/engine/reference/logging/overview/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you can use some hosted services as &lt;a href=&quot;http://help.papertrailapp.com/kb/configuration/configuring-centralized-logging-from-docker/&quot;&gt;Papertrail&lt;/a&gt;, &lt;a href=&quot;https://www.loggly.com/docs/docker-syslog/&quot;&gt;Loggly&lt;/a&gt; or &lt;a href=&quot;https://www.sumologic.com/application/docker/&quot;&gt;Sumologic&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Setup logging for all docker container is necessary for debugging. If you can use ELK (&lt;a href=&quot;http://nathanleclaire.com/blog/2015/04/27/automating-docker-logging-elasticsearch-logstash-kibana-and-logspout/&quot;&gt;Elastic search, Logstash, Kibana&lt;/a&gt;). You can use &lt;a href=&quot;https://github.com/gliderlabs/logspout&quot;&gt;logspout&lt;/a&gt; to &lt;a href=&quot;https://github.com/looplab/logspout-logstash&quot;&gt;send logs to logstash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/21/day-twenty-one-docker-and-logging/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/21/day-twenty-one-docker-and-logging/</guid>
        
        
      </item>
    
      <item>
        <title>Day Twenty - Docker and Tutum</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
&lt;a href=&quot;https://www.tutum.co/&quot;&gt;Tutum&lt;/a&gt; is docker platform for Dev and Ops. Tutum &lt;a href=&quot;http://blog.tutum.co/2015/10/21/docker-tutum/&quot;&gt;join&lt;/a&gt; Docker in October 2015.&lt;/p&gt;

&lt;p&gt;Tutum have some cool features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;internal docker registry&lt;/li&gt;
&lt;li&gt;build from git&lt;/li&gt;
&lt;li&gt;deploy to different cloud providers

&lt;ul&gt;
&lt;li&gt;Amazon Web Services&lt;/li&gt;
&lt;li&gt;Microsoft Azure&lt;/li&gt;
&lt;li&gt;Digital Ocean&lt;/li&gt;
&lt;li&gt;IBM Softlayer&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;logging, monitoring, scaling&lt;/li&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;li&gt;support for docker-compose&lt;/li&gt;
&lt;li&gt;CLI client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think this abstraction is very cool for many starting developers. You can use standard docker tools and all works out of the box. Tutum is still in beta but future is near and together with Docker they can be main player in deployment docker applications in the future.&lt;/p&gt;

&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/20/day-twenty-docker-and-tutum/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/20/day-twenty-docker-and-tutum/</guid>
        
        
      </item>
    
      <item>
        <title>Day Nineteen - Docker and AWS ECS</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
Amazon Web Services (AWS) is biggest cloud provider and you can use docker with Elastic Compute Cloud (EC2), use Amazon EC2 Container Service (ECS) or AWS Elastic Beanstalk. &lt;a href=&quot;https://aws.amazon.com/elasticbeanstalk/&quot;&gt;AWS Elastic Beanstalk&lt;/a&gt; is very similar to Heroku. It&amp;#39;s Platform as a Service (PaaS).&lt;/p&gt;

&lt;p&gt;I write post about ECS. ECS is new service exists two years. You have to use your EC2 instances to provide cluster. No price for service itself only for resources (EC2, ELB, EBS).&lt;/p&gt;

&lt;p&gt;This year &lt;a href=&quot;https://github.com/aws/amazon-ecs-cli&quot;&gt;Amazon ECS CLI&lt;/a&gt; introduce support for &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I use this command to create task definition for ECS using this command:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;AWS_REGION=us-east-1 ecs-cli compose create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;this is example &lt;code&gt;docker-compose.yml&lt;/code&gt; for docker registry:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;backend:
  image: registry
  cpu_shares: 400
  mem_limit: 314572800
  ports:
    - 5000:5000
  environment:
    AWS_BUCKET: &amp;lt;DOCKER-REGISTRY-BUCKET&amp;gt;
    AWS_ENCRYPT: &amp;#39;False&amp;#39;
    AWS_KEY: &amp;lt;AWS-KEY&amp;gt;
    AWS_REGION: us-east-1
    AWS_SECRET: &amp;lt;AWS-SECRET&amp;gt;
    AWS_SECURE: &amp;#39;False&amp;#39;
    AWS_USE_SIGV4: &amp;#39;False&amp;#39;
    SETTINGS_FLAVOR: prod
    SEARCH_BACKEND: sqlalchemy
    REGISTRY_AUTH: htpasswd
    REGISTRY_AUTH_HTPASSWD_REALM: &amp;#39;Auth Internal Registry&amp;#39;
    REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For running cluster you need &lt;a href=&quot;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html&quot;&gt;setup instances&lt;/a&gt; and register these instances into cluster. You can use &lt;a href=&quot;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html#ecs-config-s3&quot;&gt;ecs.config&lt;/a&gt; in user data to setup instance.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#!/bin/bash
yum install -y aws-cli
aws s3 cp s3://&amp;lt;BUCKET-NAME&amp;gt;/ecs.config /etc/ecs/ecs.config
echo ECS_CLUSTER=&amp;lt;CLUSTER-NAME&amp;gt; &amp;gt;&amp;gt; /etc/ecs/ecs.config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can run task or service in ECS. If you need task as cron you can use lambda for setup &lt;a href=&quot;http://stackoverflow.com/questions/27382009/aws-lambda-scheduled-tasks&quot;&gt;scheduling task&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;aws-sdk&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;region&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ecs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ECS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MAX_RESULTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;taskDefinitionArn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clusterName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;taskDefinition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;taskDefinitionArn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* required */&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clusterName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;overrides&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;startedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;nodejs-script&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ecs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;runTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// an error occurred&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;     &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// successful response&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;succeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;runTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;TASK-NAME&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;CLUSTER-NAME&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you can run service it&amp;#39;s similar but service is still alive. You can combine ECS with &lt;a href=&quot;https://mesosphere.github.io/marathon/&quot;&gt;Marathon&lt;/a&gt; or &lt;a href=&quot;http://mesos.github.io/chronos/&quot;&gt;Chronos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/19/day-nineteen-docker-and-aws-ecs/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/19/day-nineteen-docker-and-aws-ecs/</guid>
        
        
      </item>
    
      <item>
        <title>Day Eighteen - Docker and Heroku</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
many PaaS (platform as service) support docker for deployment. I can write some posts about this. I start with Heroku.&lt;/p&gt;

&lt;p&gt;Heroku introduce have own container solution for many years and &lt;a href=&quot;https://devcenter.heroku.com/articles/docker&quot;&gt;docker solution&lt;/a&gt; converts docker images into their format. You can combine &lt;code&gt;git push heroku master&lt;/code&gt; with &lt;code&gt;heroku docker:release&lt;/code&gt; and both works together.&lt;/p&gt;

&lt;p&gt;First, you have to update your heroku client and add docker plugin.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;heroku plugins:install heroku-docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;second, edit or create your &lt;code&gt;app.json&lt;/code&gt; and add &lt;code&gt;image&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Heroku maintains Docker images for most of the languages that we support:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;heroku/nodejs&lt;/li&gt;
&lt;li&gt;heroku/ruby&lt;/li&gt;
&lt;li&gt;heroku/jruby&lt;/li&gt;
&lt;li&gt;heroku/python&lt;/li&gt;
&lt;li&gt;heroku/scala&lt;/li&gt;
&lt;li&gt;heroku/clojure&lt;/li&gt;
&lt;li&gt;heroku/gradle&lt;/li&gt;
&lt;li&gt;heroku/java&lt;/li&gt;
&lt;li&gt;heroku/go&lt;/li&gt;
&lt;li&gt;heroku/go-gb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Third, you need &lt;code&gt;Procfile&lt;/code&gt; as normal heroku app. And run &lt;code&gt;heroku docker:init&lt;/code&gt;. Heroku create &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;docker-compose.yml&lt;/code&gt; file for you.&lt;/p&gt;

&lt;p&gt;For local development just run &lt;code&gt;docker-compose up web&lt;/code&gt; and app can be open at &lt;code&gt;open &amp;quot;http://$(docker-machine ip default):8080&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you need shell (for example for Ruby app), you can run &lt;code&gt;docker-compose run shell&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Rebuild container using &lt;code&gt;docker-compose build&lt;/code&gt;. This you need if you change config or app.&lt;/p&gt;

&lt;p&gt;Deploy is easy.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create Heroku app: &lt;code&gt;heroku create&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push slug into Heroku: &lt;code&gt;heroku docker:release&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open app in browser: &lt;code&gt;heroku open&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All docker images from heroku you can find at &lt;a href=&quot;https://hub.docker.com/r/heroku/&quot;&gt;dockerhub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you need some special Dockerfile you can &lt;a href=&quot;https://devcenter.heroku.com/articles/docker#modifying-the-dockerfile&quot;&gt;make own&lt;/a&gt;. This steps have some &lt;a href=&quot;https://devcenter.heroku.com/articles/docker#limitations&quot;&gt;limitations&lt;/a&gt; if you use own buildpack you have to use standard pipeline.&lt;/p&gt;

&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/18/day-eighteen-docker-and-heroku/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/18/day-eighteen-docker-and-heroku/</guid>
        
        
      </item>
    
      <item>
        <title>Day Seventeen - Docker and Sphinx documentation</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
if you write the docs, you can use &lt;a href=&quot;http://sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;. You can share your documentation using &lt;a href=&quot;https://readthedocs.org/&quot;&gt;Read the Docs&lt;/a&gt; portal.&lt;/p&gt;

&lt;p&gt;If you look at &lt;a href=&quot;https://docs.readthedocs.org/en/latest/getting_started.html#write-your-docs&quot;&gt;quickstart&lt;/a&gt; how write the docs, you can install python and some tools. This can be complicated if you can use latex for creating PDF version and do you need another version python for your development and some another for write the docs. Some members of your team can&amp;#39;t install anything for update just a few lines.&lt;/p&gt;

&lt;h2&gt;Docker solution for Sphinx&lt;/h2&gt;

&lt;p&gt;You can use &lt;a href=&quot;https://hub.docker.com/r/apiaryio/base-sphinx-doc-dev/&quot;&gt;docker image&lt;/a&gt;. There is &lt;code&gt;requirements.txt&lt;/code&gt; for all python packages:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Sphinx&amp;gt;=1.3.1
awscli==1.5.2
sphinx_rtd_theme
recommonmark
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and Dockerfile based on debian.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;        debian:jessie
&lt;span class=&quot;k&quot;&gt;MAINTAINER&lt;/span&gt;  Apiary &amp;lt;sre@apiary.io&amp;gt;

&lt;span class=&quot;k&quot;&gt;ENV&lt;/span&gt; REFRESHED_AT 2015-11-03

COPY requirements.txt /tmp/

&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; apt-get clean &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    apt-get install -y --no-install-recommends python-sphinx &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    graphviz &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    make &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    python-pip &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    pip install -r /tmp/requirements.txt &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    rm -rf /usr/share/doc/* &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    rm -rf /usr/share/locale/* &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    rm -rf /var/cache/debconf/*-old &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    rm -rf /var/lib/apt/lists/* &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    apt-get autoclean -y &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    apt-get autoremove -y

&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; mkdir /mnt/docs

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt; /mnt/docs
&lt;span class=&quot;k&quot;&gt;VOLUME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/mnt/docs&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt; make clean html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;for running in repository with documentation you can use simple shell script, with support html and latex version. &lt;a href=&quot;https://github.com/apiaryio/docker-base-images/blob/master/sphinx-latex-doc-dev/Dockerfile&quot;&gt;Latex image size&lt;/a&gt; is more than 1GB. Html version have only 100MB.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#!/bin/bash
if [[ &amp;quot;$@&amp;quot; =~ latex.* ]]; then
    echo &amp;quot;Building with LaTex image&amp;quot;
    docker run -ti --rm -v $(pwd):/mnt/docs:rw -w /mnt/docs apiaryio/base-sphinx-latex-doc-dev $@
else
    echo &amp;quot;Building with html-only image&amp;quot;
    docker run -ti --rm -v $(pwd):/mnt/docs:rw -w /mnt/docs apiaryio/base-sphinx-doc-dev $@
fi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using is very simple just run &lt;code&gt;./build.sh&lt;/code&gt; and &lt;code&gt;open build/html/index.html&lt;/code&gt;. You can use your favorite editor to edit sources and after that just run build again and check in browser. This version supports &lt;a href=&quot;http://sphinx-doc.org/rest.html&quot;&gt;reStructuredText&lt;/a&gt; and &lt;a href=&quot;https://help.github.com/articles/markdown-basics/&quot;&gt;markdown&lt;/a&gt;. You can combine both formats into your documentation. I prefer using markdown for simple text as this blog, but for complex documentation with references is better use reStructuredText (rst) format.&lt;/p&gt;

&lt;p&gt;If you like write the docs, please check &lt;a href=&quot;http://www.writethedocs.org/&quot;&gt;Write the Docs&lt;/a&gt; conferences and meetups.&lt;/p&gt;

&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/17/day-seventeen-docker-and-sphinx-documentation/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/17/day-seventeen-docker-and-sphinx-documentation/</guid>
        
        
      </item>
    
      <item>
        <title>Day Sixteen - Using docker for CLI Tools</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
I like one thing at docker and that is isolation. For example we have &lt;a href=&quot;https://github.com/apiaryio/polls-api&quot;&gt;project Polls API&lt;/a&gt; written in Python. For testing API we use tool named &lt;a href=&quot;http://dredd.readthedocs.org/en/latest/&quot;&gt;Dredd&lt;/a&gt; written in NodeJS. I can&amp;#39;t install NodeJS to our system. But you can easy use Docker to solve this problem.&lt;/p&gt;

&lt;p&gt;Here is &lt;code&gt;circle.yml&lt;/code&gt; file for project:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;machine&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;echo &amp;#39;DOCKER_OPTS=&amp;quot;-s btrfs -e lxc -D --userland-proxy=false&amp;quot;&amp;#39; | sudo tee -a /etc/default/docker&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;sudo curl -L -o /usr/bin/docker &amp;#39;https://s3-external-1.amazonaws.com/circle-downloads/docker-1.8.3-circleci&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;sudo chmod 0755 /usr/bin/docker&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cache_directories&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;~/bin/docker-compose/&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker info&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker version&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;if [[ ! -e ~/bin/docker-compose ]]; then mkdir ~/bin/docker-compose/ &amp;amp;&amp;amp; curl -L https://github.com/docker/compose/releases/download/1.4.2/docker-compose-`uname -s`-`uname -m` &amp;gt; ~/bin/docker-compose/docker-compose &amp;amp;&amp;amp; chmod +x ~/bin/docker-compose/docker-compose; fi&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/bin/docker-compose/docker-compose --version&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/bin/docker-compose/docker-compose pull&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker pull apiaryio/dredd&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/bin/docker-compose/docker-compose build&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/bin/docker-compose/docker-compose up -d web&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/bin/docker-compose/docker-compose run shell python manage.py migrate&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/bin/docker-compose/docker-compose run shell python manage.py test&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;./scripts/dredd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and bash script for running dredd is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#!/bin/bash
# set -x
which docker-compose &amp;gt; /dev/null 1&amp;gt;&amp;amp;1
if [ $? -eq 0 ]; then
  DOCKER_COMPOSE=&amp;#39;docker-compose&amp;#39;
else
  if [ -f ~/bin/docker-compose/docker-compose ]; then
    DOCKER_COMPOSE=&amp;quot;$HOME/bin/docker-compose/docker-compose&amp;quot;
  else
    echo &amp;quot;Cannot find docker-compose!&amp;quot;
    exit 1
  fi
fi
# Sync the database
$DOCKER_COMPOSE run -e DATABASE_URL=sqlite:///dredd.sqlite shell &amp;quot;python manage.py migrate&amp;quot;
# Run the dev server
$DOCKER_COMPOSE up -d web
IPWEB=`docker ps  | grep pollsapi_web | cut -d &amp;#39; &amp;#39; -f1 | xargs docker inspect  | grep IPAddress\&amp;quot;: | cut -d &amp;quot;:&amp;quot; -f2 | tr -d &amp;quot;\&amp;quot;&amp;quot; | tr -d &amp;quot;,&amp;quot; | tr -d &amp;#39;[[:space:]]&amp;#39;`
# Run dredd
docker run -v $(pwd):/root -w /root apiaryio/dredd dredd apiary.apib http://$IPWEB:8080
RESULT=$?
exit $RESULT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see setup database using docker-compose. After running web, I get IP address for python server and using this address as parameter for running dredd command.&lt;/p&gt;

&lt;p&gt;If you can create image for some tools you can make it as I did for Dredd.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; node:0.12

&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; npm install -g dredd

&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt; dredd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;#39;s easy and depends on your tool. Sometimes is better use &lt;code&gt;ENTRYPOINT&lt;/code&gt; and &lt;code&gt;CMD&lt;/code&gt;. Dredd works out of box without parameters using &lt;code&gt;dredd.yml&lt;/code&gt; config. For example API Blueprint parser &lt;a href=&quot;https://github.com/apiaryio/drafter&quot;&gt;drafter&lt;/a&gt; waiting for input from stdin. There is better using &lt;code&gt;ENTRYPOINT&lt;/code&gt; and &lt;code&gt;CMD&lt;/code&gt; with &lt;code&gt;-h&lt;/code&gt; as default parameter.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; apiaryio/base-dev-cpp:1.0.0
&lt;span class=&quot;k&quot;&gt;MAINTAINER&lt;/span&gt; Apiary &lt;span class=&quot;s2&quot;&gt;&amp;quot;sre@apiary.io&amp;quot;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; locale-gen en_US.UTF-8
&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;LC_ALL=en_US.UTF-8&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/default/locale
&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; dpkg-reconfigure locales

&lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; ./ /drafter

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt; /drafter

&lt;span class=&quot;c&quot;&gt;# It&amp;#39;s tempting to put ./configure into RUN, but then you have timestamp issues&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; ./configure &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make all &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install

&lt;span class=&quot;k&quot;&gt;ENTRYPOINT&lt;/span&gt; /usr/local/bin/drafter
&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-h&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/16/day-sixteen-using-docker-for-cli-tools/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/16/day-sixteen-using-docker-for-cli-tools/</guid>
        
        
      </item>
    
      <item>
        <title>Day Fifteen - Container Lifecycle</title>
        <description>&lt;p&gt;Hi everyone,&lt;br&gt;
 I can write some details about docker containers lifecycle.&lt;/p&gt;

&lt;h2&gt;Container statuses&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;running&lt;/li&gt;
&lt;li&gt;stopped&lt;/li&gt;
&lt;li&gt;paused&lt;/li&gt;
&lt;li&gt;killed&lt;/li&gt;
&lt;li&gt;removed&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;How change status&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;image -&amp;gt; &lt;code&gt;docker run&lt;/code&gt; -&amp;gt; running&lt;/li&gt;
&lt;li&gt;running -&amp;gt; &lt;code&gt;docker pause&lt;/code&gt; -&amp;gt; paused -&amp;gt; &lt;code&gt;docker unpause&lt;/code&gt; -&amp;gt; running&lt;/li&gt;
&lt;li&gt;running -&amp;gt; &lt;code&gt;docker stop&lt;/code&gt; -&amp;gt; stopped -&amp;gt; &lt;code&gt;docker start&lt;/code&gt; -&amp;gt; running&lt;/li&gt;
&lt;li&gt;stopped -&amp;gt; &lt;code&gt;docker rm&lt;/code&gt; -&amp;gt; removed&lt;/li&gt;
&lt;li&gt;running -&amp;gt; &lt;code&gt;docker kill&lt;/code&gt; -&amp;gt; killed -&amp;gt; &lt;code&gt;docker rm&lt;/code&gt; -&amp;gt; removed&lt;/li&gt;
&lt;li&gt;running -&amp;gt; &lt;code&gt;docker rm --force&lt;/code&gt; -&amp;gt; removed&lt;/li&gt;
&lt;li&gt;running -&amp;gt; &lt;code&gt;docker restart&lt;/code&gt; -&amp;gt; stopped -&amp;gt; running&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Docker container lifecycle schema&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/docker-lifecycle-3.png&quot; alt=&quot;Docker Container Lifecycle&quot;&gt;&lt;/p&gt;

&lt;p&gt;You can see you have many containers, sometimes problems with space in VM. Docker consumes big amount of disk space. I use this script &lt;code&gt;docker-cleanup&lt;/code&gt; for cleanup my VM. First command remove containers and second remove images.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#!/bin/bash
# Delete all containers
docker rm $(docker ps -a -q)
# Delete all images
docker rmi $(docker images -q)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See you tomorrow,&lt;br&gt;
Ladislav&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Dec 2015 11:00:00 +0100</pubDate>
        <link>http://www.dockeradvent.com//2015/12/15/day-fifteen-container-lifecycle/</link>
        <guid isPermaLink="true">http://www.dockeradvent.com//2015/12/15/day-fifteen-container-lifecycle/</guid>
        
        
      </item>
    
  </channel>
</rss>
